---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/areas/register":
    post:
      summary: Creates a area
      tags:
      - Areas
      parameters: []
      responses:
        '201':
          description: area created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/areas/index":
    get:
      summary: Retrieves all areas
      tags:
      - Areas
      responses:
        '200':
          description: areas found
          content:
            application/json:
              schema:
                type: array
                items: {}
  "/api/v1/areas/update/{id}":
    put:
      summary: Updates a area
      tags:
      - Areas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: area updated
        '404':
          description: area not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/areas/delete/{id}":
    delete:
      summary: Deletes a area
      tags:
      - Areas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: area deleted
        '404':
          description: area not found
  "/auth":
    post:
      summary: Creates a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '200':
          description: dealers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: someone@gmailx.com
                password:
                  type: string
                  example: testpass
                password_confirmation:
                  type: string
                  example: testpass
                confirm_success_url:
                  type: string
                  example: https://www.google.co.jp/
  "/auth/sign_in":
    post:
      summary: Sign in as a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '200':
          description: dealers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: someone@gmailx.com
                password:
                  type: string
                  example: testpass
  "/auth/sign_out":
    delete:
      summary: Sign out as a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '200':
          description: dealers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/dealers/index":
    get:
      summary: Retrieves all dealers
      tags:
      - Dealers
      responses:
        '200':
          description: dealers found
          content:
            application/json:
              schema:
                type: array
                items: {}
  "/api/v1/dealers/{id}":
    get:
      summary: Retrieves single dealer
      tags:
      - Dealers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: dealers found
          content:
            application/json:
              schema:
                type: array
                items: {}
  "/api/v1/dealers/search":
    post:
      summary: Searc a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '201':
          description: dealer found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work in progress:
                  type: string
              required:
              - name
  "/api/v1/dealers/update":
    put:
      summary: Updates a dealer
      tags:
      - Dealers
      responses:
        '200':
          description: dealer updated
        '404':
          description: dealer not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: '123'
                avatar:
                  type: string
                  example: 'https://s3.somewhere.com/hgioad'
                name:
                  type: string
                  example: '卓山投矢'
                gender:
                  type: string
                  example: '01'
                # email:
                #   type: string
                  # example: '123'
                # encrypted_password:
                #   type: string
                  # example: '123'
                tel:
                  type: string
                  example: '03011223344'
                dealer_name:
                  type: string
                  example: 'To-ya'
                url_x:
                  type: string
                  example: 'https://x.com/to-ya-ya-!'
                years_of_experience:
                  type: number
                  example: 5
                fee_min:
                  type: number
                  example: 1200
                fee_max:
                  type: number
                  example: 2200
                payment_account:
                  type: string
                  example: 'みずほ銀行山岡支店（普通）012340123 タクヤマトウヤ'
                notices:
                  type: string
                  example: 'お酒のアレルギーがあります。'
              required:
              - dealer_name
  "/api/v1/dealers/delete/{id}":
    delete:
      summary: Deletes a dealer
      tags:
      - Dealers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: dealer deleted
        '404':
          description: dealer not found
  "/api/v1/skills/register":
    post:
      summary: Creates a skill
      tags:
      - Skills
      parameters: []
      responses:
        '201':
          description: skill created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/index":
    get:
      summary: Retrieves all skills
      tags:
      - Skills
      responses:
        '200':
          description: skills found
          content:
            application/json:
              schema:
                type: array
                items: {}
  "/api/v1/skills/search":
    post:
      summary: Searc a skill
      tags:
      - Skills
      parameters: []
      responses:
        '201':
          description: skill found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/update/{id}":
    put:
      summary: Updates a skill
      tags:
      - Skills
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: skill updated
        '404':
          description: skill not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/delete/{id}":
    delete:
      summary: Deletes a skill
      tags:
      - Skills
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: skill deleted
        '404':
          description: skill not found
servers:
- url: http://localhost:3000
  description: '開発環境'
- url: https://coconuts-poker-87d283940a6e.herokuapp.com
  description: '検証環境'

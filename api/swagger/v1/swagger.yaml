---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/areas/create":
    post:
      summary: Creates a area
      tags:
      - Areas
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: area_test
                  created_at:
                    type: string
                    example: '2030-03-01 20:45:22'
                  updated_at:
                    type: string
                    example: '2030-03-01 20:45:22'
        '422':
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: area_test
              required:
              - name
  "/api/v1/areas/index":
    get:
      summary: Retrieves all areas
      tags:
      - Areas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: area_test
                    created_at:
                      type: string
                      example: '2030-03-01 20:45:22'
                    updated_at:
                      type: string
                      example: '2030-03-01 20:45:22'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
  "/api/v1/areas/update":
    put:
      summary: Updates a area
      tags:
      - Areas
      parameters: []
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Updated Name
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Updated Name
              required:
              - id
              - name
  "/api/v1/areas/delete":
    delete:
      summary: Deletes a area
      tags:
      - Areas
      parameters: []
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
              - id
  "/api/v1/dealers/{id}":
    get:
      summary: Fetch single dealer
      tags:
      - Dealers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: dealer found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  avatar:
                    type: string
                    example: "/img/sample"
                  name:
                    type: string
                    example: ディーラー太郎
                  gender:
                    type: string
                    example: male
                  email:
                    type: string
                    example: mail@dummy.co.xx
                  encrypted_password:
                    type: string
                    example: password
                  tel:
                    type: string
                    example: '01022004400'
                  dealer_name:
                    type: string
                    example: D-TRO
                  url_x:
                    type: string
                    example: dtaroxx1111
                  date_of_becoming:
                    type: date
                    example: '2022-10-02'
                  fee_min:
                    type: number
                    example: 1400
                  fee_max:
                    type: number
                    example: 3000
                  payment_account:
                    type: string
                    example: UFJ
                  notices:
                    type: string
                    example: 特記事項
                  deleted_at:
                    type: datetime
                    example: '2025-02-03'
                  areas:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        name:
                          type: string
                          example: area_test
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
  "/api/v1/dealers/delete":
    post:
      summary: Deletes a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  avatar:
                    type: string
                    example: "/img/sample"
                  name:
                    type: string
                    example: ディーラー太郎
                  gender:
                    type: string
                    example: male
                  email:
                    type: string
                    example: mail@dummy.co.xx
                  encrypted_password:
                    type: string
                    example: password
                  tel:
                    type: string
                    example: '01022004400'
                  dealer_name:
                    type: string
                    example: D-TRO
                  url_x:
                    type: string
                    example: dtaroxx1111
                  date_of_becoming:
                    type: date
                    example: '2022-10-02'
                  fee_min:
                    type: number
                    example: 1400
                  fee_max:
                    type: number
                    example: 3000
                  payment_account:
                    type: string
                    example: UFJ
                  notices:
                    type: string
                    example: 特記事項
                  deleted_at:
                    type: datetime
                    example: '2025-02-03 21:33:40'
                  areas:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        name:
                          type: string
                          example: area_test
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
              - id
  "/api/v1/skills/create":
    post:
      summary: Creates a skill
      tags:
      - Skills_未完成
      parameters: []
      responses:
        '201':
          description: skill created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/index":
    get:
      summary: Retrieves all skills
      tags:
      - Skills_未完成
      responses:
        '200':
          description: skills found
          content:
            application/json:
              schema:
                type: array
                items: {}
  "/api/v1/skills/search":
    post:
      summary: Search a skill
      tags:
      - Skills_未完成
      parameters: []
      responses:
        '201':
          description: skill found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/update/{id}":
    put:
      summary: Updates a skill
      tags:
      - Skills_未完成
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: skill updated
        '404':
          description: skill not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/delete/{id}":
    delete:
      summary: Deletes a skill
      tags:
      - Skills_未完成
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: skill deleted
        '404':
          description: skill not found
servers:
- url: http://localhost:3000

---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/areas/create":
    post:
      summary: Creates a area
      tags:
      - Areas
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  area:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: area_test
                      created_at:
                        type: string
                        example: '2030-03-01 20:45:22'
                      updated_at:
                        type: string
                        example: '2030-03-01 20:45:22'
        '422':
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: area_test
              required:
              - name
  "/api/v1/areas/index":
    get:
      summary: Retrieves all areas
      tags:
      - Areas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  areas:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: area_test
                        created_at:
                          type: string
                          example: '2030-03-01 20:45:22'
                        updated_at:
                          type: string
                          example: '2030-03-01 20:45:22'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
  "/api/v1/areas/update":
    put:
      summary: Updates a area
      tags:
      - Areas
      parameters: []
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Updated Name
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Updated Name
              required:
              - id
              - name
  "/api/v1/areas/delete":
    delete:
      summary: Deletes a area
      tags:
      - Areas
      parameters: []
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
              - id
  "/auth":
    post:
      summary: Creates a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '200':
          description: dealers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: someone@gmailx.com
                password:
                  type: string
                  example: testpass
                password_confirmation:
                  type: string
                  example: testpass
                confirm_success_url:
                  type: string
                  example: https://www.google.co.jp/
  "/auth/sign_in":
    post:
      summary: Sign in as a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '200':
          description: dealers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: someone@gmailx.com
                password:
                  type: string
                  example: testpass
  "/auth/sign_out":
    delete:
      summary: Sign out as a dealer
      tags:
      - Dealers
      parameters: []
      responses:
        '200':
          description: dealers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/dealers/index":
    get:
      summary: Retrieves all dealers
      tags:
      - Dealers
      responses:
        '200':
          description: dealers found
          content:
            application/json:
              schema:
                type: array
                items: {}
  "/api/v1/skills/create":
    post:
      summary: Creates a skill
      tags:
      - Skills
      parameters: []
      responses:
        '201':
          description: skill created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/index":
    get:
      summary: Retrieves all skills
      tags:
      - Skills
      responses:
        '200':
          description: skills found
          content:
            application/json:
              schema:
                type: array
                items: {}
  "/api/v1/skills/search":
    post:
      summary: Search a skill
      tags:
      - Skills
      parameters: []
      responses:
        '201':
          description: skill found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/update/{id}":
    put:
      summary: Updates a skill
      tags:
      - Skills
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: skill updated
        '404':
          description: skill not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/skills/delete/{id}":
    delete:
      summary: Deletes a skill
      tags:
      - Skills
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: skill deleted
        '404':
          description: skill not found
servers:
- url: http://localhost:3000
